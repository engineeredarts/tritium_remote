stages:
  - check
  - docs
  - deploy

variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo
  RUST_BACKTRACE: FULL

cache:
  key: "$CI_JOB_NAME"
  untracked: true
  paths:
  - cargo/
  - target/

build_and_test:
  stage: check
  image: rust:1.65-slim-bullseye
  before_script:
    - apt-get update
    - apt-get install -y python3-dev
  script:
    - cargo build
    - cargo test

build_py:
  stage: check
  image: quay.io/pypa/manylinux2014_x86_64
  variables:
    PYO3_PYTHON: python3.7
  before_script:
    - yum install -y cargo
    - python3.11 -m pip install --user maturin
  script:
    - cd py-tritium-remote && /root/.local/bin/maturin build
  artifacts:
    paths:
      - target/wheels

fmt_rust:
  stage: check
  image: rust:1.65-slim-buster
  before_script:
    - rustup component add rustfmt
  script:
    - cargo fmt --all -- --check

fmt_py:
  stage: check
  image: python:3.11.0-alpine3.15
  before_script:
    - pip install black
  script:
      # We have to specify files with no extension exactly
    - black --check .

docs_rust:
  stage: docs
  image: rust:1.65-slim-buster
  dependencies: []
  needs: []
  script:
    - cargo doc
  artifacts:
    paths:
      - target/doc

docs_python:
  stage: docs
  image: quay.io/pypa/manylinux2014_x86_64
  dependencies: [build_py]
  before_script:
    - yum install -y python3-pip
    - pip3 install -U pip
    - python3.11 -m pip pydoc
    - python3.11 -m pip target/wheels/*-cp311-*.whl
  script:
    - python3.11 -m pdoc tritium_remote -o doc
  artifacts:
    paths:
      - doc

# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
